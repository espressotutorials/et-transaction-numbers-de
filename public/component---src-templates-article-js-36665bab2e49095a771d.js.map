{"version":3,"file":"component---src-templates-article-js-36665bab2e49095a771d.js","mappings":"wJAwEA,IAtEmB,WAiDf,OACI,uBAAKA,UAAU,yDACX,sBAAIA,UAAU,wCAAsC,kEACpD,wBAAMA,UAAU,OAAOC,SAlD/B,SAAsBC,GAClBA,EAAEC,iBACF,IAAMC,EAASC,SAASC,eAAe,UACjCC,EAAOF,SAASC,eAAe,QAQrC,GALIF,IACAA,EAAOI,UAAY,GACnBJ,EAAOK,UAAUC,OAAO,kBAGvBH,GAASA,UAAAA,EAAMI,MAGhB,OAFAP,EAAOI,UAAY,8EACnBJ,EAAOK,UAAUG,IAAI,gBAIzBC,MAbS,wEAaE,CACPC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAAEC,MAAOZ,EAAKI,UACpCS,MAAK,SAACC,GACL,OAAIA,EAASC,GACFD,EAEJE,QAAQC,OAAOH,EAC1B,IAAGD,MAAK,WACJhB,EAAOI,UAAY,qEACnBJ,EAAOK,UAAUG,IAAI,kBACrBL,EAAKI,MAAQ,GACbc,YAAW,WACPrB,EAAOI,UAAY,GACnBJ,EAAOK,UAAUC,OAAO,iBAC5B,GAAG,IACP,IAAGgB,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZvB,EAAOI,UAAY,yEACnBJ,EAAOK,UAAUG,IAAI,gBACrBa,YAAW,WACPrB,EAAOI,UAAY,GACnBJ,EAAOK,UAAUC,OAAO,eAC5B,GAAG,IACP,GACJ,GAMY,uBAAKV,UAAU,IACX,yBAAOA,UAAU,UAAU8B,QAAQ,SAAO,kBAC1C,uBAAK9B,UAAU,8BACX,yBAAO+B,GAAG,OACH/B,UAAU,qHACVgC,KAAK,OAAOC,YAAY,mBAC/B,0BAAQD,KAAK,SAAShC,UAAU,iKAA+J,iBAM3M,uBAAK+B,GAAG,SAAS/B,UAAU,iCAGvC,C,qHCtCA,UAzBgB,SAAH,GAAgB,IAAXkC,EAAI,EAAJA,KACNC,EAASD,EAAKE,eAAdD,KACAE,EAAUH,EAAKE,eAAeE,YAA9BD,MACR,OACE,gBAAC,IAAM,CAACE,IAAKL,EAAKM,MACd,gBAAC,IAAM,KACH,6BAAQH,EAAK,yFAEjB,2BAASrC,UAAU,mDACf,uBAAKA,UAAU,uDACX,sBAAIA,UAAU,2CAA2CqC,KAGjE,uBAAKrC,UAAU,qFACX,uBAAKA,UAAU,UACX,uBAAKA,UAAU,uBACX,uBAAKA,UAAU,oBAAoByC,wBAAyB,CAAEC,OAAQP,KACtE,gBAAC,IAAU,SAMjC,EAIO,IAAMQ,EAAO,WAAH,OACb,gBAAC,IAAG,KAAE,C","sources":["webpack://programmieren-lernen-buch/./src/components/Newsletter.js","webpack://programmieren-lernen-buch/./src/templates/article.js"],"sourcesContent":["import React from 'react'\n\nconst Newsletter = () => {\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        const status = document.getElementById('status');\n        const mail = document.getElementById('mail');\n        const url = `https://api.espresso-tutorials.com/api/newsletter/subscribe?locale=de`;\n\n        if (status) {\n            status.innerText = '';\n            status.classList.remove('text-red-500');\n        }\n\n        if (!mail || !mail?.value) {\n            status.innerText = 'Fehler: Bitte überprüfen Sie ihre Angaben und versuchen Sie es erneut!';\n            status.classList.add('text-red-500');\n            return;\n        }\n\n        fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json',\n            },\n            body: JSON.stringify({ email: mail.value }),\n        }).then((response) => {\n            if (response.ok) {\n                return response;\n            }\n            return Promise.reject(response);\n        }).then(() => {\n            status.innerText = 'Vielen Dank, Sie haben sich erfolgreich zum Newsletter angemeldet.';\n            status.classList.add('text-green-500');\n            mail.value = '';\n            setTimeout(() => {\n                status.innerText = '';\n                status.classList.remove('text-green-500');\n            }, 5000);\n        }).catch((error) => {\n            console.log(error);\n            status.innerText = 'Fehler: Bitte überprüfen Sie ihre Angaben und versuchen Sie es erneut!';\n            status.classList.add('text-red-500');\n            setTimeout(() => {\n                status.innerText = '';\n                status.classList.remove('text-red-500');\n            }, 5000);\n        });\n    }\n\n    return (\n        <div className=\"mt-16 bg-blue-200 rounded-lg md:rounded-xl p-4 md:p-8\">\n            <h2 className=\"text-2xl text-gray-900 leading-tight\">Für den Newsletter anmelden und nie mehr Neuerungen verpassen!</h2>\n            <form className=\"mt-8\" onSubmit={handleSubmit}>\n                <div className=\"\">\n                    <label className=\"sr-only\" htmlFor=\"email\">E-Mail Adresse</label>\n                    <div className=\"flex flex-row items-center\">\n                        <input id=\"mail\"\n                               className=\"flex-1 appearance-none text-sm py-3 focus:outline-none rounded-lg bg-white text-gray-800 px-4 placeholder-gray-600\"\n                               type=\"text\" placeholder=\"E-Mail Adresse\"/>\n                        <button type=\"submit\" className=\"w-32 text-center ml-4 appearance-none bg-blue-500 hover:bg-orange-500 font-semibold text-white leading-none p-4 rounded-lg text-center text-sm cursor-pointer\">\n                            Abonnieren\n                        </button>\n                    </div>\n                </div>\n            </form>\n            <div id=\"status\" className=\"w-full text-sm font-semibold\"></div>\n        </div>\n    )\n}\n\nexport default Newsletter\n","import React from \"react\"\nimport {graphql} from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport {Helmet} from \"react-helmet\";\nimport {SEO} from \"../components/Seo\";\nimport Newsletter from \"../components/Newsletter\";\n\nconst Article = ({data}) => {\n    const { html } = data.markdownRemark\n    const { title } = data.markdownRemark.frontmatter\n    return(\n      <Layout key={data.link}>\n          <Helmet>\n              <title>{title} | Möglichkeiten zur Darstellung des Umsatzkostenverfahrens in SAP - UKV mit SAP ERP</title>\n          </Helmet>\n          <section className=\"bg-blue-200 text-gray-800 pt-16 pb-10 text-left\">\n              <div className=\"mx-auto max-w-3xl px-4 sm:px-6 xl:max-w-5xl xl:px-0\">\n                  <h1 className=\"font-semibold md:text-4xl text-2xl pb-4\">{title}</h1>\n              </div>\n          </section>\n          <div className=\"mx-auto max-w-3xl px-4 sm:px-6 xl:max-w-5xl xl:px-0 flex flex-row flex-wrap py-10\">\n              <div className=\"w-full\">\n                  <div className=\"w-full mt-9 article\">\n                      <div className=\"prose lg:prose-xl\" dangerouslySetInnerHTML={{ __html: html }}></div>\n                      <Newsletter></Newsletter>\n                  </div>\n              </div>\n          </div>\n        </Layout>\n    )\n}\n\nexport default Article\n\nexport const Head = () => (\n    <SEO/>\n)\n\nexport const query = graphql`\n  query ArticleQuery($slug: String) {\n    markdownRemark(frontmatter: {slug: {eq: $slug}}) {\n      html\n      frontmatter {\n        title\n            excerpt\n      }\n    }\n  }\n`\n"],"names":["className","onSubmit","e","preventDefault","status","document","getElementById","mail","innerText","classList","remove","value","add","fetch","method","headers","body","JSON","stringify","email","then","response","ok","Promise","reject","setTimeout","catch","error","console","log","htmlFor","id","type","placeholder","data","html","markdownRemark","title","frontmatter","key","link","dangerouslySetInnerHTML","__html","Head"],"sourceRoot":""}